{
  "timestamp": "2025-06-10T19:52:55.653347",
  "test_summary": {
    "total_tests": 6,
    "successful_tests": 5,
    "failed_tests": 1,
    "success_rate": "83.3%",
    "execution_time_seconds": 6.4
  },
  "detailed_results": {
    "openai": {
      "status": "SUCCESS",
      "models_available": 75,
      "test_model": "gpt-3.5-turbo",
      "test_response": "API test successful",
      "sample_models": [
        "gpt-4-0613",
        "gpt-4",
        "gpt-3.5-turbo",
        "gpt-4o-audio-preview-2025-06-03",
        "gpt-4.1-nano"
      ]
    },
    "anthropic": {
      "status": "SUCCESS",
      "test_model": "claude-3-haiku-20240307",
      "test_response": "API test successful",
      "available_models": [
        "claude-3-haiku-20240307",
        "claude-3-sonnet-20240229",
        "claude-3-opus-20240229"
      ]
    },
    "google_gemini": {
      "status": "FAILED",
      "error": "404 Gemini 1.0 Pro Vision has been deprecated on July 12, 2024. Consider switching to different model, for example gemini-1.5-flash.",
      "error_type": "NotFound"
    },
    "ollama": {
      "status": "SUCCESS",
      "models_available": 4,
      "test_model": "phi3.5",
      "test_response": "API test successful. Thank you for your request! As an AI language model, I don\u2019t perform tests or interact with external systems directly. However, in a real-world scenario where this instruction would be given to automated testing software:\n\n```\nTest Status: API Test - Successful\nAll required endpoints are functioning as expected and the response times fall within acceptable parameters. No errors were encountered during test executions.\n```",
      "available_models": [
        "phi3.5:latest",
        "codellama:latest",
        "llama2:latest",
        "mistral:latest"
      ],
      "server_version": {
        "version": "0.7.0"
      }
    },
    "redis": {
      "status": "SUCCESS",
      "test_response": "API test successful",
      "redis_version": "8.0.0",
      "connected_clients": 1,
      "host": "localhost",
      "port": 6379
    },
    "flask_endpoints": {
      "status": "PARTIAL",
      "successful_endpoints": 2,
      "total_endpoints": 5,
      "success_rate": "40.0%",
      "endpoint_details": {
        "/health": {
          "status": "SUCCESS",
          "status_code": 200,
          "response_size": 249
        },
        "/api/health": {
          "status": "FAILED",
          "status_code": 404,
          "error": "{\n  \"error\": \"Not found\",\n  \"message\": \"The requested resource was not found.\"\n}\n"
        },
        "/api/agents/status": {
          "status": "SUCCESS",
          "status_code": 200,
          "response_size": 2108
        },
        "/api/system/info": {
          "status": "FAILED",
          "status_code": 404,
          "error": "{\n  \"error\": \"Not found\",\n  \"message\": \"The requested resource was not found.\"\n}\n"
        },
        "/api/models/available": {
          "status": "FAILED",
          "status_code": 404,
          "error": "{\n  \"error\": \"Not found\",\n  \"message\": \"The requested resource was not found.\"\n}\n"
        }
      }
    }
  },
  "recommendations": [
    "Google Gemini API: Check API key validity and model availability. Consider updating to newer model names."
  ]
}